{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G. WillaCurse\\\\Downloads\\\\weight-tracker-node-app\\\\weight-tracker-node-app\\\\frontend\\\\src\\\\components\\\\WeightEntriesTable.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\n\n/**\n * Renders a table of weight entries. Provides inline editing and deletion.\n */\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WeightEntriesTable = ({\n  entries,\n  onEdit,\n  onDelete,\n  editingEntry,\n  onUpdate\n}) => {\n  _s();\n  const [editDate, setEditDate] = useState('');\n  const [editWeight, setEditWeight] = useState('');\n  const startEdit = entry => {\n    onEdit(entry);\n    // Prepopulate the edit fields with the existing values.\n    setEditDate(entry.date.substring(0, 10));\n    setEditWeight(entry.weight);\n  };\n  const handleUpdate = id => {\n    onUpdate(id, {\n      id,\n      date: editDate,\n      weight: parseFloat(editWeight)\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"entries-table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Date\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Weight (lbs)\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Actions\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: entries.map(entry => /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: editingEntry && editingEntry.id === entry.id ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"date\",\n              value: editDate,\n              onChange: e => setEditDate(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 36,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 35,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"number\",\n              step: \"0.1\",\n              value: editWeight,\n              onChange: e => setEditWeight(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleUpdate(entry.id),\n              children: \"Save\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onEdit(null),\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 52,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: new Date(entry.date).toLocaleDateString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: entry.weight\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => startEdit(entry),\n              children: \"Edit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => onDelete(entry.id),\n              children: \"Delete\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true)\n      }, entry.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n};\n_s(WeightEntriesTable, \"mVIyxR7Hb6r0V7T+uXTlrqGuLFs=\");\n_c = WeightEntriesTable;\nexport default WeightEntriesTable;\nvar _c;\n$RefreshReg$(_c, \"WeightEntriesTable\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","WeightEntriesTable","entries","onEdit","onDelete","editingEntry","onUpdate","_s","editDate","setEditDate","editWeight","setEditWeight","startEdit","entry","date","substring","weight","handleUpdate","id","parseFloat","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","type","value","onChange","e","target","step","onClick","Date","toLocaleDateString","_c","$RefreshReg$"],"sources":["C:/Users/G. WillaCurse/Downloads/weight-tracker-node-app/weight-tracker-node-app/frontend/src/components/WeightEntriesTable.js"],"sourcesContent":["import React, { useState } from 'react';\n\n/**\n * Renders a table of weight entries. Provides inline editing and deletion.\n */\nconst WeightEntriesTable = ({ entries, onEdit, onDelete, editingEntry, onUpdate }) => {\n  const [editDate, setEditDate] = useState('');\n  const [editWeight, setEditWeight] = useState('');\n\n  const startEdit = (entry) => {\n    onEdit(entry);\n    // Prepopulate the edit fields with the existing values.\n    setEditDate(entry.date.substring(0, 10));\n    setEditWeight(entry.weight);\n  };\n\n  const handleUpdate = (id) => {\n    onUpdate(id, { id, date: editDate, weight: parseFloat(editWeight) });\n  };\n\n  return (\n    <table className=\"entries-table\">\n      <thead>\n        <tr>\n          <th>Date</th>\n          <th>Weight (lbs)</th>\n          <th>Actions</th>\n        </tr>\n      </thead>\n      <tbody>\n        {entries.map((entry) => (\n          <tr key={entry.id}>\n            {editingEntry && editingEntry.id === entry.id ? (\n              <>\n                <td>\n                  <input\n                    type=\"date\"\n                    value={editDate}\n                    onChange={(e) => setEditDate(e.target.value)}\n                  />\n                </td>\n                <td>\n                  <input\n                    type=\"number\"\n                    step=\"0.1\"\n                    value={editWeight}\n                    onChange={(e) => setEditWeight(e.target.value)}\n                  />\n                </td>\n                <td>\n                  <button onClick={() => handleUpdate(entry.id)}>Save</button>\n                  <button onClick={() => onEdit(null)}>Cancel</button>\n                </td>\n              </>\n            ) : (\n              <>\n                <td>{new Date(entry.date).toLocaleDateString()}</td>\n                <td>{entry.weight}</td>\n                <td>\n                  <button onClick={() => startEdit(entry)}>Edit</button>\n                  <button onClick={() => onDelete(entry.id)}>Delete</button>\n                </td>\n              </>\n            )}\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nexport default WeightEntriesTable;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}