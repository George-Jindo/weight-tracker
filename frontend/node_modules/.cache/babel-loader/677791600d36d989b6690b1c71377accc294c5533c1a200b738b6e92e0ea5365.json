{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\G. WillaCurse\\\\Downloads\\\\weight-tracker-node-app\\\\weight-tracker-node-app\\\\frontend\\\\src\\\\components\\\\WeightData.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport WeightEntryForm from './WeightEntryForm';\nimport WeightEntriesTable from './WeightEntriesTable';\nimport ChartComponent from './Chart';\nimport { getWeightEntries, createWeightEntry, updateWeightEntry, deleteWeightEntry } from '../services/api';\n\n/**\n * WeightData component encapsulates the CRUD operations for weight entries and visualizes them in a chart.\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst WeightData = () => {\n  _s();\n  const [entries, setEntries] = useState([]);\n  const [editingEntry, setEditingEntry] = useState(null);\n\n  // Fetch all entries from the API.\n  const fetchEntries = async () => {\n    try {\n      const response = await getWeightEntries();\n      setEntries(response.data);\n    } catch (error) {\n      console.error('Failed to fetch entries', error);\n    }\n  };\n  useEffect(() => {\n    fetchEntries();\n  }, []);\n\n  // Handler for creating a new entry.\n  const handleCreate = async entry => {\n    try {\n      await createWeightEntry(entry);\n      fetchEntries();\n    } catch (error) {\n      console.error('Failed to create entry', error);\n    }\n  };\n\n  // Handler for updating an existing entry.\n  const handleUpdate = async (id, entry) => {\n    try {\n      await updateWeightEntry(id, entry);\n      setEditingEntry(null);\n      fetchEntries();\n    } catch (error) {\n      console.error('Failed to update entry', error);\n    }\n  };\n\n  // Handler for deleting an entry.\n  const handleDelete = async id => {\n    try {\n      await deleteWeightEntry(id);\n      fetchEntries();\n    } catch (error) {\n      console.error('Failed to delete entry', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"weight-data-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"My Weight Data\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeightEntryForm, {\n      onSubmit: handleCreate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(WeightEntriesTable, {\n      entries: entries,\n      onEdit: entry => setEditingEntry(entry),\n      onDelete: handleDelete,\n      editingEntry: editingEntry,\n      onUpdate: handleUpdate\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), entries.length > 0 && /*#__PURE__*/_jsxDEV(ChartComponent, {\n      entries: entries\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n};\n_s(WeightData, \"/JQEmhjrM83OhygZ221Ank8sA3E=\");\n_c = WeightData;\nexport default WeightData;\nvar _c;\n$RefreshReg$(_c, \"WeightData\");","map":{"version":3,"names":["React","useEffect","useState","WeightEntryForm","WeightEntriesTable","ChartComponent","getWeightEntries","createWeightEntry","updateWeightEntry","deleteWeightEntry","jsxDEV","_jsxDEV","WeightData","_s","entries","setEntries","editingEntry","setEditingEntry","fetchEntries","response","data","error","console","handleCreate","entry","handleUpdate","id","handleDelete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onEdit","onDelete","onUpdate","length","_c","$RefreshReg$"],"sources":["C:/Users/G. WillaCurse/Downloads/weight-tracker-node-app/weight-tracker-node-app/frontend/src/components/WeightData.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport WeightEntryForm from './WeightEntryForm';\nimport WeightEntriesTable from './WeightEntriesTable';\nimport ChartComponent from './Chart';\nimport {\n  getWeightEntries,\n  createWeightEntry,\n  updateWeightEntry,\n  deleteWeightEntry\n} from '../services/api';\n\n/**\n * WeightData component encapsulates the CRUD operations for weight entries and visualizes them in a chart.\n */\nconst WeightData = () => {\n  const [entries, setEntries] = useState([]);\n  const [editingEntry, setEditingEntry] = useState(null);\n\n  // Fetch all entries from the API.\n  const fetchEntries = async () => {\n    try {\n      const response = await getWeightEntries();\n      setEntries(response.data);\n    } catch (error) {\n      console.error('Failed to fetch entries', error);\n    }\n  };\n\n  useEffect(() => {\n    fetchEntries();\n  }, []);\n\n  // Handler for creating a new entry.\n  const handleCreate = async (entry) => {\n    try {\n      await createWeightEntry(entry);\n      fetchEntries();\n    } catch (error) {\n      console.error('Failed to create entry', error);\n    }\n  };\n\n  // Handler for updating an existing entry.\n  const handleUpdate = async (id, entry) => {\n    try {\n      await updateWeightEntry(id, entry);\n      setEditingEntry(null);\n      fetchEntries();\n    } catch (error) {\n      console.error('Failed to update entry', error);\n    }\n  };\n\n  // Handler for deleting an entry.\n  const handleDelete = async (id) => {\n    try {\n      await deleteWeightEntry(id);\n      fetchEntries();\n    } catch (error) {\n      console.error('Failed to delete entry', error);\n    }\n  };\n\n  return (\n    <div className=\"weight-data-container\">\n      <h2>My Weight Data</h2>\n      <WeightEntryForm onSubmit={handleCreate} />\n      <WeightEntriesTable\n        entries={entries}\n        onEdit={(entry) => setEditingEntry(entry)}\n        onDelete={handleDelete}\n        editingEntry={editingEntry}\n        onUpdate={handleUpdate}\n      />\n      {entries.length > 0 && <ChartComponent entries={entries} />}\n    </div>\n  );\n};\n\nexport default WeightData;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}